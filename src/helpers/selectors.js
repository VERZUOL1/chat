import { createSelector } from 'reselect';

/**
 * Gets messages from state
 * @param state
 * @returns {vfileMessage.VFileMessage[] | Array | messages | Function | initialState.messages | {} | *}
 */
export const getMessages = state => state.chat.messages;

/**
 * Selector to retern unread messages count
 * @type {OutputSelector<any, *, (res: (vfileMessage.VFileMessage[] | Array | messages | Function | initialState.messages | {} | *)) => *> | OutputParametricSelector<any, any, *, (res: (vfileMessage.VFileMessage[] | Array | messages | Function | initialState.messages | {} | *)) => *> | OutputSelector<any, any, (res1: (vfileMessage.VFileMessage[] | Array | messages | Function | initialState.messages | {} | *), res2: *) => any> | OutputParametricSelector<any, any, any, (res1: (vfileMessage.VFileMessage[] | Array | messages | Function | initialState.messages | {} | *), res2: *) => any> | OutputSelector<any, any, (res1: (vfileMessage.VFileMessage[] | Array | messages | Function | initialState.messages | {} | *), res2: *, res3: any) => any> | OutputParametricSelector<any, any, any, (res1: (vfileMessage.VFileMessage[] | Array | messages | Function | initialState.messages | {} | *), res2: *, res3: any) => any> | OutputSelector<any, any, (res1: (vfileMessage.VFileMessage[] | Array | messages | Function | initialState.messages | {} | *), res2: *, res3: any, res4: any) => any> | OutputParametricSelector<any, any, any, (res1: (vfileMessage.VFileMessage[] | Array | messages | Function | initialState.messages | {} | *), res2: *, res3: any, res4: any) => any> | OutputSelector<any, any, (res1: (vfileMessage.VFileMessage[] | Array | messages | Function | initialState.messages | {} | *), res2: *, res3: any, res4: any, res5: any) => any> | OutputParametricSelector<any, any, any, (res1: (vfileMessage.VFileMessage[] | Array | messages | Function | initialState.messages | {} | *), res2: *, res3: any, res4: any, res5: any) => any> | OutputSelector<any, any, (res1: (vfileMessage.VFileMessage[] | Array | messages | Function | initialState.messages | {} | *), res2: *, res3: any, res4: any, res5: any, res6: any) => any> | OutputParametricSelector<any, any, any, (res1: (vfileMessage.VFileMessage[] | Array | messages | Function | initialState.messages | {} | *), res2: *, res3: any, res4: any, res5: any, res6: any) => any> | OutputSelector<any, any, (res1: (vfileMessage.VFileMessage[] | Array | messages | Function | initialState.messages | {} | *), res2: *, res3: any, res4: any, res5: any, res6: any, res7: any) => any> | OutputParametricSelector<any, any, any, (res1: (vfileMessage.VFileMessage[] | Array | messages | Function | initialState.messages | {} | *), res2: *, res3: any, res4: any, res5: any, res6: any, res7: any) => any> | OutputSelector<any, any, (res1: (vfileMessage.VFileMessage[] | Array | messages | Function | initialState.messages | {} | *), res2: *, res3: any, res4: any, res5: any, res6: any, res7: any, res8: any) => any> | OutputParametricSelector<any, any, any, (res1: (vfileMessage.VFileMessage[] | Array | messages | Function | initialState.messages | {} | *), res2: *, res3: any, res4: any, res5: any, res6: any, res7: any, res8: any) => any> | OutputSelector<any, any, (res1: (vfileMessage.VFileMessage[] | Array | messages | Function | initialState.messages | {} | *), res2: *, res3: any, res4: any, res5: any, res6: any, res7: any, res8: any, res9: any) => any> | OutputParametricSelector<any, any, any, (res1: (vfileMessage.VFileMessage[] | Array | messages | Function | initialState.messages | {} | *), res2: *, res3: any, res4: any, res5: any, res6: any, res7: any, res8: any, res9: any) => any> | OutputSelector<any, any, (res1: (vfileMessage.VFileMessage[] | Array | messages | Function | initialState.messages | {} | *), res2: *, res3: any, res4: any, res5: any, res6: any, res7: any, res8: any, res9: any, res10: any) => any> | OutputParametricSelector<any, any, any, (res1: (vfileMessage.VFileMessage[] | Array | messages | Function | initialState.messages | {} | *), res2: *, res3: any, res4: any, res5: any, res6: any, res7: any, res8: any, res9: any, res10: any) => any> | OutputSelector<any, any, (res1: (vfileMessage.VFileMessage[] | Array | messages | Function | initialState.messages | {} | *), res2: *, res3: any, res4: any, res5: any, res6: any, res7: any, res8: any, res9: any, res10: any, res11: any) => any> | OutputParametricSelector<any, any, any, (res1: (vfileMessage.VFileMessage[] | Array | messages | Function | initialState.messages | {} | *), res2: *, res3: any, res4: any, res5: any, res6: any, res7: any, res8: any, res9: any, res10: any, res11: any) => any> | OutputSelector<any, any, (res1: (vfileMessage.VFileMessage[] | Array | messages | Function | initialState.messages | {} | *), res2: *, res3: any, res4: any, res5: any, res6: any, res7: any, res8: any, res9: any, res10: any, res11: any, res12: any) => any> | OutputParametricSelector<any, any, any, (res1: (vfileMessage.VFileMessage[] | Array | messages | Function | initialState.messages | {} | *), res2: *, res3: any, res4: any, res5: any, res6: any, res7: any, res8: any, res9: any, res10: any, res11: any, res12: any) => any> | OutputSelector<any, *, (res: any) => *> | OutputParametricSelector<any, any, *, (res: any) => *> | OutputSelector<any, *, (res1: any, res2: any) => *> | OutputParametricSelector<any, any, *, (res1: any, res2: any) => *> | OutputSelector<any, *, (res1: any, res2: any, res3: any) => *> | OutputParametricSelector<any, any, *, (res1: any, res2: any, res3: any) => *> | OutputSelector<any, *, (res1: any, res2: any, res3: any, res4: any) => *> | OutputParametricSelector<any, any, *, (res1: any, res2: any, res3: any, res4: any) => *> | OutputSelector<any, *, (res1: any, res2: any, res3: any, res4: any, res5: any) => *> | OutputParametricSelector<any, any, *, (res1: any, res2: any, res3: any, res4: any, res5: any) => *> | OutputSelector<any, *, (res1: any, res2: any, res3: any, res4: any, res5: any, res6: any) => *> | OutputParametricSelector<any, any, *, (res1: any, res2: any, res3: any, res4: any, res5: any, res6: any) => *> | OutputSelector<any, *, (res1: any, res2: any, res3: any, res4: any, res5: any, res6: any, res7: any) => *> | OutputParametricSelector<any, any, *, (res1: any, res2: any, res3: any, res4: any, res5: any, res6: any, res7: any) => *> | OutputSelector<any, *, (res1: any, res2: any, res3: any, res4: any, res5: any, res6: any, res7: any, res8: any) => *> | OutputParametricSelector<any, any, *, (res1: any, res2: any, res3: any, res4: any, res5: any, res6: any, res7: any, res8: any) => *> | OutputSelector<any, *, (res1: any, res2: any, res3: any, res4: any, res5: any, res6: any, res7: any, res8: any, res9: any) => *> | OutputParametricSelector<any, any, *, (res1: any, res2: any, res3: any, res4: any, res5: any, res6: any, res7: any, res8: any, res9: any) => *> | OutputSelector<any, *, (res1: any, res2: any, res3: any, res4: any, res5: any, res6: any, res7: any, res8: any, res9: any, res10: any) => *> | OutputParametricSelector<any, any, *, (res1: any, res2: any, res3: any, res4: any, res5: any, res6: any, res7: any, res8: any, res9: any, res10: any) => *> | OutputSelector<any, *, (res1: any, res2: any, res3: any, res4: any, res5: any, res6: any, res7: any, res8: any, res9: any, res10: any, res11: any) => *> | OutputParametricSelector<any, any, *, (res1: any, res2: any, res3: any, res4: any, res5: any, res6: any, res7: any, res8: any, res9: any, res10: any, res11: any) => *> | OutputSelector<any, *, (res1: any, res2: any, res3: any, res4: any, res5: any, res6: any, res7: any, res8: any, res9: any, res10: any, res11: any, res12: any) => *> | OutputParametricSelector<any, any, *, (res1: any, res2: any, res3: any, res4: any, res5: any, res6: any, res7: any, res8: any, res9: any, res10: any, res11: any, res12: any) => *> | OutputSelector<any, *, (...res: any[]) => *> | OutputParametricSelector<any, any, *, (...res: any[]) => *>}
 */
const getUnreadMessagesCount = createSelector(
  getMessages,
  messages => messages.filter(item => item.status === 'UNREAD').length,
);

export default getUnreadMessagesCount;
